version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      - POSTGRES_DB=windows_known_issues_monitor
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=js\$GubvkIS5eoYrh\$V3NB
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.docker
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  fastapi:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=js\$GubvkIS5eoYrh\$V3NB
      - DB_HOST=db
      - DB_NAME=windows_known_issues_monitor
    env_file:
      - .env.docker
    networks:
      - app-network

  streamlit:
    build: .
    command: streamlit run app/app.py
    volumes:
      - .:/app
    ports:
      - "8501:8501"
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=js$GubvkIS5eoYrh$V3NB
      - DB_HOST=db
      - DB_NAME=windows_known_issues_monitor
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy
      fastapi:
        condition: service_started
    networks:
      - app-network

volumes:
  postgres_data:


networks:
  app-network:
    driver: bridge
